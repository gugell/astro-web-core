---
import type { Link } from "@/types";
import { siteConfig } from "@utils/config";
import { getHomePermalink } from "@utils/permalinks";
import { Icon } from "astro-icon/components";
interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  footNote?: string;
  theme?: string;
  t: Record<string, string>;
}

const {
  socialLinks = [],
  secondaryLinks = [],
  links = [],
  theme = "light",
  t,
} = Astro.props;
---

<footer
  class:list={[
    { dark: theme === "dark" },
    "relative border-t border-gray-200 dark:border-slate-800 not-prose container mx-auto px-4 py-0",
  ]}
>
  <div class="flex items-center gap-3 justify-between">
    <div class="my-8">
      <a class="inline-block font-bold text-xl" href={getHomePermalink()}
        >{siteConfig?.name}</a
      >
      <div class="text-sm text-muted flex gap-1">
        {
          secondaryLinks.length > 0 &&
            secondaryLinks.map(({ key, href }, index) => (
              <>
                {index !== 0 ? " Â· " : ""}
                <a
                  class="text-muted hover:text-gray-700 dark:text-gray-400 hover:underline transition duration-150 ease-in-out"
                  href={href}
                  set:html={t[key as keyof typeof t]}
                />
              </>
            ))
        }
      </div>
    </div>

    {
      socialLinks?.length ? (
        <ul class="flex mb-4 md:order-1 -ml-2 md:ml-4 md:mb-0 rtl:ml-0 rtl:-mr-2 rtl:md:ml-0 rtl:md:mr-4">
          {socialLinks.map(({ ariaLabel, href, text, icon }) => (
            <li>
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label={ariaLabel}
                href={href}
              >
                {icon && <Icon name={icon} class="w-5 h-5" />}
                <Fragment set:html={text} />
              </a>
            </li>
          ))}
        </ul>
      ) : (
        ""
      )
    }
  </div>
</footer>
