---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";

import Headline from "@/components/blog/Headline.astro";
import Pagination from "@/components/blog/Pagination.astro";

import PageLayout from "@/layouts/PageLayout.astro";
import { blogListRobots } from "@/utils/blog";
import ArticleCard from "@components/blog/ArticleCard.astro";
import { getStaticPathsBlogList } from "@utils/blog-utils";
import { defaultLang, languages, tr } from "@utils/i18n";
import { getCurrentLang } from "@utils/navigation";

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogList({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const currentPage = page?.currentPage ?? 1;

const currentPath = Astro.url.pathname;
const lang = getCurrentLang(currentPath, languages, defaultLang);
const t = tr[lang as keyof typeof tr];

const metadata = {
  title: `Blog${currentPage > 1 ? ` â€” Page ${currentPage}` : ""}`,
  robots: {
    index: blogListRobots?.index && currentPage === 1,
    follow: blogListRobots?.follow,
  },
  openGraph: {
    type: "blog",
  },
};
---

<PageLayout metadata={metadata}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline subtitle={t["blog.subtitle"]}>
      {t["blog.title"]}
    </Headline>
    <div
      class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-2 gap-y-10 gap-x-0 sm:gap-x-10 max-w-screen-2xl mx-auto px-4 sm:px-8"
    >
      {(page.data ?? []).map((post) => <ArticleCard post={post} />)}
    </div>

    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</PageLayout>
